# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.10.0
      
    working_directory: /go/src/github.com/rugwirobaker/gomosaic

    environment:
        GOCACHE: "/tmp/go/cache"

    steps:
      - checkout
      #- run: git config --global url.ssh://git@github.com/rugwirobaker
      - restore_cache:
          key: build-cache-{{ .Branch }}-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}

      - run:
          name: download-libraries
          command: |
            if [ ! -d /go/src/github.com/rugwirobaker/gomosaic/vendor ]; then
                curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
                dep ensure -vendor-only
            fi

            #google app engine
            curl https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-203.0.0-linux-x86_64.tar.gz
            gunzip google-cloud-sdk-203.0.0-linux-x86_64.tar.gz && google-cloud-sdk/install.sh
            gcloud --version
      - run:
          name: tests
          command: |
            mkdir -p $GOCACHE
            mkdir -p /tmp/test-results
            go build -v ./...
            go test -p 6 -race -v ./... #| tee /tmp/test-results

       #deploy 
      - run : 
            name: deploy
            command: 
                gcloud -q app deploy engine/app.yaml --promote --version=staging

      - save_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
              - /go/src/github.com/rugwirobaker/vendor

      - store_test_results:
          path:  /tmp/test-results
      # specify any bash command here prefixed with `run: `
      #- run: go get -v -t -d ./...
      #- run: go test -v ./...