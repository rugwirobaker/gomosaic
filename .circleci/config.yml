# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: codebaker/gomosaic:staging
      
    working_directory: /go/src/github.com/rugwirobaker/gomosaic

    environment:
        GOCACHE: "/tmp/go/cache"
        OS_VERSION: ""

    steps:
      - checkout
      #- run: git config --global url.ssh://git@github.com/rugwirobaker
      - restore_cache:
          key: build-cache-{{ .Branch }}-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}

      - run:
          name: download-libraries
          command: |
            go get -u github.com/golang/dep/cmd/dep      
            cd app && dep ensure
      - run:
          name: tests
          command: |
            mkdir -p $GOCACHE
            mkdir -p /tmp/test-results
            go build -v ./...
            go test -p 6 -race -v ./... #| tee /tmp/test-results


      - save_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
              - /go/src/github.com/rugwirobaker/vendor

      - store_test_results:
          path:  /tmp/test-results
  deploy:
    docker:
      - image: google/cloud-sdk:alpine

    working_directory: /go/src/github.com/rugwirobaker/gomosaic
    steps:
        - checkout

        - restore_cache:
            key: build-cache-{{ .Branch }}-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}
        

        - run:
            name: Authenticate with Google Cloud
            command: |
                #dependecies
                go get -u github.com/golang/dep/cmd/dep      
                cd app && dep ensure
                #setup gcloud project
                echo $GCLOUD_SERVICE_KEY | base64 -d>${HOME}/gcloud-service-key.json
                gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
        
        - run:
            name: GAE Deploy
            command: |
                gcloud config set project $GCLOUD_PROJECT
                gcloud -q app deploy engine/app.yaml --promote --version=staging
        
        - run:
            name: discarding all changes
            command: git checkout -- .
        
        - save_cache:
            key: go-app-deploy{{ checksum "project.clj" }}
            paths: 
                - /tmp/test-results/
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
#I think it should work
#please God let this work